{"version":3,"sources":["components/header/index.js","components/footer/index.js","components/form/index.js","components/results/index.js","app.js","index.js"],"names":["Header","id","Footer","className","Form","props","useState","method","setMethod","body","setBody","handleMethodClick","e","target","toUpperCase","onSubmit","preventDefault","checkedBody","JSON","parse","err","console","log","formData","url","value","setRequestParams","name","type","onClick","htmlFor","rows","cols","onChange","Results","loading","data","src","theme","performGET","requestParams","a","axios","get","res","response","statusText","App","setData","isLoading","useEffect","message","callApi","Main","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.4f616ffa.chunk.js","sourcesContent":["import './header.scss';\n\nconst Header = () => {\n  return (\n    <header id=\"header\">\n      <h1>RESTy</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import './footer.scss';\n\nconst Footer = () =>  {\n  return <footer className=\"footer\">&copy; 2021</footer>; \n}\n\nexport default Footer;\n","import { useState } from 'react';\n\nimport './form.scss';\n\nconst Form = (props) => {\n  const [method, setMethod] = useState('');\n  const [body, setBody] = useState(null);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    let checkedBody = {}\n\n    try {\n      checkedBody = JSON.parse(body);\n    } catch(err) {\n      console.log(\"Invalid JSON entered into the form by user\")\n    }\n    \n    const formData = {\n      method: method || 'GET',\n      url: e.target.url.value,\n      body: checkedBody,\n    };\n    props.setRequestParams(formData);  \n  }\n\n  const handleMethodClick = (e) => {\n    setMethod(e.target.id.toUpperCase());\n  }\n\n  const handleBodyChange = (e) => {\n    e.preventDefault();\n    setBody(e.target.value)\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <span>&nbsp;URL:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n          <input id=\"url-input\" name='url' type='text' />     \n          <button type=\"submit\">GO!</button>\n        </label>\n        <label className=\"methods\">\n          <span onClick={handleMethodClick} className={method === \"GET\" ? \"clicked\" : ''} id=\"get\">GET</span>\n          <span onClick={handleMethodClick} className={method === \"POST\" ? \"clicked\" : ''} id=\"post\">POST</span>\n          <span onClick={handleMethodClick} className={method === \"PUT\" ? \"clicked\" : ''} id=\"put\">PUT</span>\n          <span onClick={handleMethodClick} className={method === \"DELETE\" ? \"clicked\" : ''} id=\"delete\">DELETE</span>\n        </label>\n        {(method === 'POST' || method === 'PUT') && (\n          <>\n            <label htmlFor=\"body-text-area\">Enter a correctly formatted JSON object to use as the request body</label>\n            <textarea  rows=\"4\" cols=\"50\" onChange={handleBodyChange} name=\"body\" id=\"body-text-area\"></textarea>\n          </>\n        )}\n      </form>\n    </>\n  );\n}\n\nexport default Form;\n","import './results.scss';\nimport ReactJson from 'react-json-view';\n\nconst Results = (props) => {\n  return (\n    <section id=\"results-container\" data-testid=\"data\"> \n      {props.loading ? <h1>LOADING...</h1> : (\n        <pre> \n          <span className=\"result-txt\">Results:</span>\n\n          {props.data && (\n            <ReactJson src={props.data} theme=\"summerfruit:inverted\" />\n          )}\n          <br />\n          \n        </pre>\n      )}\n    </section>\n  );\n}\n\nexport default Results;\n","import './app.scss';\n\nimport { useState, useEffect } from 'react';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form';\nimport Results from './components/results';\nimport axios from 'axios';\n\nconst App = () => {\n  const [data, setData] = useState(null);\n  const [loading, isLoading] = useState(false);\n  const [requestParams, setRequestParams] = useState({});\n\n  useEffect(() => {\n    async function callApi() {\n      isLoading(true);\n      let res;\n      if(requestParams.url === '') {\n        res = { message: \"Empty url provided. Try something a bit more interesting.\" };\n        setData(res);\n        return;\n      }\n      switch(requestParams.method) {\n        case 'GET':\n          res = await performGET(requestParams);\n          setData(res);\n          break;\n        case 'POST':\n          //res = await performPOST(requestParams);\n          res = { message: \"This method not supported yet.\" };\n          setData(res);\n          break;\n        case 'PUT':\n          //res = await performPUT(requestParams);\n          res = { message: \"This method not supported yet.\" };\n          setData(res);\n          break;\n        case 'DELETE':\n          //res = await performDELETE(requestParams);\n          res = { message: \"This method not supported yet.\" };\n          setData(res);\n          break;\n        default:\n          console.log(\"Invalid method choice given\");\n          setData('Invalid method choice given');\n      }\n      isLoading(false);\n    }\n    callApi();\n  }, [requestParams]);\n\n  return (\n    <>     \n      <Header />\n      \n      <div id=\"main-container\">\n        <Form setRequestParams={setRequestParams} />\n        <div>Request Method: {requestParams.method}</div>\n        <div>URL: {requestParams.url}</div>\n        <Results data={data} loading={loading} />\n      </div>  \n      \n      <Footer />\n    </>\n  );\n}\n\nconst performGET = async (requestParams) => {\n  try {\n    let res = await axios.get(requestParams.url);\n    console.log(res.data);\n    return res;\n  } catch(err) {\n    if(err.response) {\n      return { \"Error\": err.response.statusText };\n    }\n    return { \"Error\": \"Unable to process a request with those values.\" }\n  }\n}\n\n// const performPOST = async (requestParams) => {\n//   let config = {\n//     headers: {\n//       'Access-Control-Allow-Origin': '*',\n//       'Content-Type': 'application/json',\n//       'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n//     }\n//   }\n\n//   try {\n//     let res = await axios.post(requestParams.url, requestParams.body, config);\n//     console.log(res.data);\n//     return res.data;\n//   } catch(err) {\n//     return err.response;\n//   }\n// }\n\n// const performPUT = async (requestParams) => {\n//   let config = {\n//     headers: {\n//       'Access-Control-Allow-Origin': '*',\n//       'Content-Type': 'application/json',\n//     }\n//   }\n\n//   try {\n//     let res = await axios.put(requestParams.url, requestParams.body, config);\n//     console.log(res.data);\n//     return res.data;\n//   } catch(err) {\n//     return err.response;\n//   }\n// }\n\n// const performDELETE = async (requestParams) => {\n//   let config = {\n//     headers: {\n//       'Access-Control-Allow-Origin': '*',\n//       'Content-Type': 'application/json',\n//     }\n//   }\n\n//   try {\n//     let res = await axios.delete(requestParams.url, config);\n//     console.log(res.data);\n//     return res.data;\n//   } catch(err) {\n//     return err.response;\n//   }\n// }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}