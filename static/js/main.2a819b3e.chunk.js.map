{"version":3,"sources":["components/header/index.js","components/footer/index.js","components/form/index.js","components/results/index.js","components/history/index.js","app.js","index.js"],"names":["Header","id","Footer","className","Form","props","useState","method","setMethod","body","setBody","handleMethodClick","e","target","toUpperCase","onSubmit","preventDefault","checkedBody","JSON","parse","err","console","log","formData","url","value","setRequestParams","name","type","onClick","htmlFor","rows","cols","onChange","Results","loading","data","src","headers","theme","History","oldHistory","setOldHistory","useEffect","localStorage","getItem","Accordion","defaultActiveKey","map","item","key","history","length","Item","eventKey","Body","stringify","undefined","App","useReducer","state","action","payload","dispatch","callApi","a","performGET","push","setItem","res","message","axios","get","requestParams","Main","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.2a819b3e.chunk.js","sourcesContent":["import './header.scss';\n\nconst Header = () => {\n  return (\n    <header id=\"header\">\n      <h1>RESTy</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import './footer.scss';\n\nconst Footer = () =>  {\n  return <footer className=\"footer\">&copy; 2021</footer>; \n}\n\nexport default Footer;\n","import { useState } from 'react';\n\nimport './form.scss';\n\nconst Form = (props) => {\n  const [method, setMethod] = useState('');\n  const [body, setBody] = useState(null);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    let checkedBody = {}\n\n    try {\n      checkedBody = JSON.parse(body);\n    } catch(err) {\n      console.log(\"Invalid JSON entered into the form by user\")\n    }\n    \n    const formData = {\n      method: method || 'GET',\n      url: e.target.url.value,\n      body: checkedBody,\n    };\n    props.setRequestParams(formData);  \n  }\n\n  const handleMethodClick = (e) => {\n    setMethod(e.target.id.toUpperCase());\n  }\n\n  const handleBodyChange = (e) => {\n    e.preventDefault();\n    setBody(e.target.value)\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <span>&nbsp;URL:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n          <input id=\"url-input\" name='url' type='text' />     \n          <button type=\"submit\">GO!</button>\n        </label>\n        <label className=\"methods\">\n          <span onClick={handleMethodClick} className={method === \"GET\" ? \"clicked\" : ''} id=\"get\">GET</span>\n          <span onClick={handleMethodClick} className={method === \"POST\" ? \"clicked\" : ''} id=\"post\">POST</span>\n          <span onClick={handleMethodClick} className={method === \"PUT\" ? \"clicked\" : ''} id=\"put\">PUT</span>\n          <span onClick={handleMethodClick} className={method === \"DELETE\" ? \"clicked\" : ''} id=\"delete\">DELETE</span>\n        </label>\n        {(method === 'POST' || method === 'PUT') && (\n          <>\n            <label htmlFor=\"body-text-area\">Enter a correctly formatted JSON object to use as the request body</label>\n            <textarea  rows=\"4\" cols=\"50\" onChange={handleBodyChange} name=\"body\" id=\"body-text-area\"></textarea>\n          </>\n        )}\n      </form>\n    </>\n  );\n}\n\nexport default Form;\n","import './results.scss';\nimport ReactJson from 'react-json-view';\n\nconst Results = (props) => {\n  return (\n    <section id=\"results-container\" data-testid=\"data\"> \n      {props.loading ? <h1>LOADING...</h1> : (\n        <pre> \n          <span className=\"result-txt\">Results:</span>\n\n          {(props.data && typeof props.data === 'object') && (\n            <div data-testid=\"result-data\">\n              <p>HEADERS</p>\n              <ReactJson src={props.data.headers} theme=\"summerfruit:inverted\" />\n              <p>DATA</p>\n              {/* Big performance issues with large data sets */}\n              <ReactJson src={props.data.data} theme=\"summerfruit:inverted\" />\n            </div>\n          )}\n          <br />    \n        </pre>\n      )}\n    </section>\n  );\n}\n\nexport default Results;\n","import { useEffect, useState } from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\n\nconst History = (props) => {\n  let [ oldHistory, setOldHistory ] = useState(null)\n\n  useEffect(() => {  \n    if(localStorage.getItem('history')) {\n      setOldHistory(JSON.parse(localStorage.getItem('history')));\n    }\n  }, []);\n\n\n  return (\n    <div id=\"history-container\">\n      <br />\n      <span className=\"history-txt\">History: </span>\n      <Accordion defaultActiveKey=\"0\">\n        {oldHistory && (\n          oldHistory.map((item, key) => {\n            //prevents the most recently searched for item from appearing in history twice\n            if(props.history[props.history.length - 1] && item.url === props.history[props.history.length - 1].url && key === oldHistory.length - 1) return null;\n\n            return (\n              <Accordion.Item eventKey={key}> \n                <Accordion.Header>URL: {item.url}</Accordion.Header>\n                <Accordion.Body>\n                 {JSON.stringify(item.data, undefined, 2)}\n                </Accordion.Body>\n              </Accordion.Item>\n            );\n          })\n        )}  \n        {props.history && (\n          props.history.map((item, key) => {\n            return (\n              <Accordion.Item eventKey={key}> \n                <Accordion.Header>{item.url}</Accordion.Header>\n                <Accordion.Body>\n                 {JSON.stringify(item.data, undefined, 2)}\n                </Accordion.Body>\n              </Accordion.Item>\n            );\n          })\n        )}   \n      </Accordion>\n    </div>\n  )\n}\n\nexport default History;","import './app.scss';\n\nimport { useReducer, useEffect } from 'react';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form';\nimport Results from './components/results';\nimport History from './components/history';\nimport axios from 'axios';\n\nconst App = () => {\n  let initialState = {\n    loading: false,\n    data: null,\n    method: 'GET',\n    body: {},\n    url: '',\n    history: []\n  }\n  \n  let reducer = (state, action) => {\n    switch(action.type) {\n      \n      case 'SET_DATA':\n        return {\n          ...state,\n          data: action.payload\n        }\n      case 'SET_LOADING':\n        return {\n          ...state,\n          loading: action.payload\n        }\n      case 'SET_REQUEST_PARAMS':\n        return {\n          ...state,\n          method: action.payload.method,\n          body: action.payload.body,\n          url: action.payload.url\n        }\n      case 'SET_HISTORY':\n        return {\n          ...state,\n          history: [...state.history, action.payload]\n        }\n      default:\n        return state;\n    }\n  }\n  \n  let [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    if(state.url.length > 0) {\n      let action = { type: 'SET_LOADING', payload: true }\n      dispatch(action);\n     \n      async function callApi() {\n        let action = { type: 'SET_DATA', payload: null}\n        let res;\n\n        switch(state.method) {\n          case 'GET':\n            let { headers, data } = await performGET(state.url);\n            action.payload = { headers, data };\n            console.log(headers, data)\n            dispatch(action);\n\n            //update history with request data and used url\n            let history = [];\n            history = JSON.parse(localStorage.getItem('history')) || [];\n            history.push({url: state.url, data: { headers, data }});\n            localStorage.setItem('history', JSON.stringify(history));\n\n            break;\n          case 'POST':\n            //res = await performPOST(requestParams);\n            res = { message: \"This method not supported yet.\" };\n            action.payload = res;\n          \n            dispatch(action);\n            break;\n          case 'PUT':\n            //res = await performPUT(requestParams);\n            res = { message: \"This method not supported yet.\" };\n            action.payload = res;\n\n            dispatch(action);\n            break;\n          case 'DELETE':\n            //res = await performDELETE(requestParams);\n            res = { message: \"This method not supported yet.\" };\n            action.payload = res;\n\n            dispatch(action);\n            break;\n          default:\n            res = { message: \"This method not supported yet.\" };\n            action.payload = res;\n\n            dispatch(action);\n        }\n      }\n     \n      callApi();\n\n      action = { type: 'SET_LOADING', payload: false};\n      dispatch(action);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.url]);\n\n\n  const setRequestParams = (requestParams) => {\n    let action = { type: 'SET_REQUEST_PARAMS', payload: requestParams };\n\n    dispatch(action);\n  }\n\n  const performGET = async (url) => {\n    try {\n      let res = await axios.get(url);\n      let { headers, data } = res;\n      let action = { type: 'SET_HISTORY', payload: {url, data: { headers, data }}};\n      dispatch(action);\n      return res;\n    } catch(err) {\n      let { headers } = err;\n      let res = {headers, data: \"Unable to process a request with the given url and/or request body.\"};\n      let action = { type: 'SET_HISTORY', payload: {url, res}};\n      dispatch(action);\n      return res;\n    }\n  }\n\n  return (\n    <>     \n      <Header />\n      \n      <div id=\"main-container\">\n        <Form setRequestParams={setRequestParams} />\n        <div>Request Method: {state.method}</div>\n        <div>URL: {state.url}</div>\n        <History history={state.history} />\n        <Results data={state.data} loading={state.loading} />\n        \n      </div>  \n      \n      <Footer />\n    </>\n  );\n}\n\n\n// const performPOST = async (requestParams) => {\n//   let config = {\n//     headers: {\n//       'Access-Control-Allow-Origin': '*',\n//       'Content-Type': 'application/json',\n//       'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n//     }\n//   }\n\n//   try {\n//     let res = await axios.post(requestParams.url, requestParams.body, config);\n//     console.log(res.data);\n//     return res.data;\n//   } catch(err) {\n//     return err.response;\n//   }\n// }\n\n// const performPUT = async (requestParams) => {\n//   let config = {\n//     headers: {\n//       'Access-Control-Allow-Origin': '*',\n//       'Content-Type': 'application/json',\n//     }\n//   }\n\n//   try {\n//     let res = await axios.put(requestParams.url, requestParams.body, config);\n//     console.log(res.data);\n//     return res.data;\n//   } catch(err) {\n//     return err.response;\n//   }\n// }\n\n// const performDELETE = async (requestParams) => {\n//   let config = {\n//     headers: {\n//       'Access-Control-Allow-Origin': '*',\n//       'Content-Type': 'application/json',\n//     }\n//   }\n\n//   try {\n//     let res = await axios.delete(requestParams.url, config);\n//     console.log(res.data);\n//     return res.data;\n//   } catch(err) {\n//     return err.response;\n//   }\n// }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}